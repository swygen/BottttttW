from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

# Callback identifiers
BUTTON_PROFILE = "profile"
BUTTON_REFER = "refer"
BUTTON_LOGIN = "login"
BUTTON_DEPOSIT = "deposit"
BUTTON_WITHDRAW = "withdraw"
BUTTON_PROJECT = "project"
BUTTON_SUPPORT = "support"

# START command handler
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("ЁЯСд ржкрзНрж░рзЛржлрж╛ржЗрж▓", callback_data=BUTTON_PROFILE)],
        [InlineKeyboardButton("ЁЯФЧ рж░рзЗржлрж╛рж░ ржХрж░рзЗ ржЖрзЯ ржХрж░рзБржи", callback_data=BUTTON_REFER)],
        [InlineKeyboardButton("тЬЕ ржХрж┐ржнрж╛ржмрзЗ рж▓ржЧржЗржи/рж╕рж╛ржЗржи ржЖржк ржХрж░ржмрзЛ", callback_data=BUTTON_LOGIN)],
        [InlineKeyboardButton("ЁЯТ│ ржХрж┐ржнрж╛ржмрзЗ ржЯрж╛ржХрж╛ ржбрж┐ржкрзЛржЬрж┐ржЯ ржХрж░ржмрзЛ", callback_data=BUTTON_DEPOSIT)],
        [InlineKeyboardButton("ЁЯПж ржХрж┐ржнрж╛ржмрзЗ ржЯрж╛ржХрж╛ ржЙрждрзНрждрзЛрж▓ржи ржХрж░ржмрзЛ", callback_data=BUTTON_WITHDRAW)],
        [InlineKeyboardButton("ЁЯЫТ ржХрж┐ржнрж╛ржмрзЗ ржкрзНрж░ржЬрзЗржХрзНржЯ ржХрзНрж░ржпрж╝ ржХрж░ржмрзЛ", callback_data=BUTTON_PROJECT)],
        [InlineKeyboardButton("ЁЯТм ржХрж╛рж╕рзНржЯржорж╛рж░ рж╕рж╛ржкрзЛрж░рзНржЯ", callback_data=BUTTON_SUPPORT)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_msg = (
        "рж╕рзНржмрж╛ржЧрждржо Invest Sure-ржП!\n"
        "ржЖржкржирж╛рж░ ржЙржкрж╛рж░рзНржЬржирзЗрж░ ржПржХ ржЕржиржирзНржп рж╕ржЩрзНржЧрзАред\n\n"
        "ржирж┐ржЪрзЗрж░ ржЕржкрж╢ржиржЧрзБрж▓рзЛ ржерзЗржХрзЗ ржмрзЗржЫрзЗ ржирж┐ржи:"
    )
    
    await update.message.reply_text(welcome_msg, reply_markup=reply_markup)

# BUTTON callback handler
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    link = "ЁЯФЧ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЬрж╛ржирждрзЗ ржжрзЗржЦрзБржи:\nhttps://Invest-Sure.netlify.app"

    if query.data == BUTTON_PROFILE:
        await query.edit_message_text(
            f"ржЖржкржирж╛рж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓:\n\n"
            f"ржирж╛ржо: {query.from_user.first_name}\n"
            f"ID: {query.from_user.id}\n"
            f"ржмрзНржпрж╛рж▓рзЗржирзНрж╕: 0 BDT\n"
            f"рж░рзЗржлрж╛рж░ ржХрзЛржб: {str(query.from_user.id)[-6:]}\n"
            f"ржпрзЛржЧржжрж╛ржи: --"
        )
    
    elif query.data == BUTTON_REFER:
        refer_link = f"https://t.me/{context.bot.username}?start={query.from_user.id}"
        await query.edit_message_text(
            f"рж░рзЗржлрж╛рж░ ржХрж░рзЗ ржЖрзЯ ржХрж░рзБржи:\n\n"
            f"ржЖржкржирж╛рж░ рж░рзЗржлрж╛рж░ рж▓рж┐ржВржХ:\n{refer_link}\n\n"
            f"ржмржирзНржзрзБржжрзЗрж░ рж╢рзЗрзЯрж╛рж░ ржХрж░рзБржи ржУ ржЖрзЯ ржХрж░рзБржи!"
        )

    elif query.data == BUTTON_LOGIN:
        await query.edit_message_text(
            "тЬЕ рж▓ржЧржЗржи/рж╕рж╛ржЗржи ржЖржк ржХрж░рждрзЗ:\n"
            "рзз. ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯрзЗ ржпрж╛ржи\n"
            "рзи. ржирж╛ржо, ржорзЛржмрж╛ржЗрж▓ ржУ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржжрж┐ржи\n"
            "рзй. ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ рждрзИрж░рж┐ ржХрж░рзБржи\n\n" + link
        )

    elif query.data == BUTTON_DEPOSIT:
        await query.edit_message_text(
            "ЁЯТ│ ржЯрж╛ржХрж╛ ржбрж┐ржкрзЛржЬрж┐ржЯ ржХрж░рждрзЗ:\n"
            "рзз. ржмрж┐ржХрж╛рж╢/ржиржЧржж/рж░ржХрзЗржЯ ржирж╛ржорзНржмрж╛рж░рзЗ ржкрж╛ржарж╛ржи\n"
            "рзи. ржкрзЗржорзЗржирзНржЯ рж░рзЗржлрж╛рж░рзЗржирзНрж╕ ржжрж┐ржи\n"
            "рзй. ржХржиржлрж╛рж░рзНржо ржХрж░рзБржи\n\n" + link
        )

    elif query.data == BUTTON_WITHDRAW:
        await query.edit_message_text(
            "ЁЯПж ржЯрж╛ржХрж╛ ржЙрждрзНрждрзЛрж▓ржи ржХрж░рждрзЗ:\n"
            "рзз. ржорж┐ржирж┐ржорж╛ржо ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржерж╛ржХрждрзЗ рж╣ржмрзЗ\n"
            "рзи. ржЙрждрзНрждрзЛрж▓ржи ржЕржирзБрж░рзЛржз ржжрж┐ржи\n"
            "рзй. ржЯрж╛ржХрж╛ рзирзк ржШржгрзНржЯрж╛рж░ ржоржзрзНржпрзЗ ржкрж╛ржмрзЗржи\n\n" + link
        )

    elif query.data == BUTTON_PROJECT:
        await query.edit_message_text(
            "ЁЯЫТ ржкрзНрж░ржЬрзЗржХрзНржЯ ржХрж┐ржирждрзЗ:\n"
            "рзз. ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ ржерзЗржХрзЗ ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи\n"
            "рзи. ржкрзНрж░ржЬрзЗржХрзНржЯ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи\n"
            "рзй. ржХржиржлрж╛рж░рзНржо ржХрж░рзБржи\n\n" + link
        )

    elif query.data == BUTTON_SUPPORT:
        await query.edit_message_text(
            "ЁЯТм ржпрзЗржХрзЛржирзЛ рж╕ржорж╕рзНржпрж╛ рж╣рж▓рзЗ:\n"
            "рзз. ржЖржорж╛ржжрзЗрж░ рж╕рж╛ржкрзЛрж░рзНржЯ ржкрзЗржЗржЬрзЗ ржпрж╛ржи\n"
            "рзи. рж╕ржорж╕рзНржпрж╛ рж▓рж┐ржЦрзЗ ржкрж╛ржарж╛ржи\n"
            "рзй. ржЖржорж░рж╛ ржжрзНрж░рзБржд ржЙрждрзНрждрж░ ржжрзЗржмрзЛ\n\n" + link
        )

# MAIN bot launcher
if __name__ == '__main__':
    app = ApplicationBuilder().token("7575065892:AAFbxN-Eh5_rN0MAB6RVQ-SEfVlZFs6_FAQ").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    print("Bot is running...")
    app.run_polling()
